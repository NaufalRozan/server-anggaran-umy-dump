generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  salt      String
  roleId    String?  @map("role_id")
  role      Role?    @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById   String? @map("created_by_id")
  created_by    User?   @relation("UserCreatedBy", fields: [createdById], references: [id])
  created_users User[]  @relation("UserCreatedBy")

  unit                 Unit[]
  unit_created         Unit[]     @relation("UnitCreatedBy")
  visi_misi_created    VisiMisi[] @relation("VisiMisiCreatedBy")
  PerformanceIndicator kpi[]      @relation("PerformanceIndicatorCreatedBy")
  MataAnggaran         ma[]       @relation("MataAnggaranCreatedBy")
  MaOnKpi              MaOnKpi[]  @relation("MaOnKpiCreatedBy")
  Bidang               Bidang[]   @relation("BidangCreatedBy")

  @@map("users")
}

model Bidang {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  kpi         kpi[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id")
  created_by  User?    @relation("BidangCreatedBy", fields: [createdById], references: [id])

  @@map("bidang")
}

model Role {
  id          String       @id @default(cuid())
  name        String       @unique
  permissions Permission[]
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  users       User[]

  @@map("roles")
}

model Permission {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
  roles       Role[]

  @@map("permissions")
}

model CategoryUnit {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  kpi       kpi[]    @relation("PrimaryPic")
  Unit      Unit[]

  @@map("category_unit")
}

model Unit {
  id           String         @id @default(cuid())
  name         String
  categoryId   String?        @map("category_id")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  createdById  String?        @map("created_by_id")
  isUnit       Boolean        @default(true) @map("is_unit")
  users        User[]
  VisiMisi     VisiMisi[]
  rekening     Rekening[]
  DataUnit     DataUnit[]
  DataSubUnit  DataSubUnit[]
  PaguAnggaran PaguAnggaran[]

  created_by    User?         @relation("UnitCreatedBy", fields: [createdById], references: [id])
  category_unit CategoryUnit? @relation(fields: [categoryId], references: [id])
  secondary_kpi kpi[]         @relation("SecondaryPic")
  Review        Review[]
  MaOnKpi       MaOnKpi[]
  Jadwal        Jadwal?

  @@map("units")
}

model DataUnit {
  id          String        @id @default(cuid())
  unitId      String        @map("unit_id")
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  DataSubUnit DataSubUnit[]

  unit Unit @relation(fields: [unitId], references: [id])

  @@map("data_unit")
}

model DataSubUnit {
  id         String   @id @default(cuid())
  unitId     String   @map("unit_id")
  dataUnitId String   @map("data_unit_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  unit     Unit     @relation(fields: [unitId], references: [id])
  dataUnit DataUnit @relation(fields: [dataUnitId], references: [id])

  @@map("data_sub_unit")
}

model VisiMisi {
  id         String  @id @default(cuid())
  unitId     String? @map("unit_id")
  tahun      String  @unique
  visi       String
  misi       String
  tujuan     String
  keterangan String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById String? @map("created_by_id")
  created_by  User?   @relation("VisiMisiCreatedBy", fields: [createdById], references: [id])

  unit Unit? @relation(fields: [unitId], references: [id], onDelete: Cascade)

  @@map("visi_misi")
}

model kpi {
  id               String    @id @default(cuid())
  bidangId         String    @map("bidang_id")
  kpiCode          String    @unique @map("kpi_code")
  name             String
  sifat            String
  standard         String?
  baseline         String?
  target           String?
  active           Boolean   @default(true)
  tahun            String
  primary_pic_id   String    @map("primary_pic_id")
  secondary_pic_id String?   @map("secondary_pic_id")
  MaOnKpi          MaOnKpi[]
  ma               ma[]
  Laporan          Laporan[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById   String?      @map("created_by_id")
  created_by    User?        @relation("PerformanceIndicatorCreatedBy", fields: [createdById], references: [id])
  primary_pic   CategoryUnit @relation("PrimaryPic", fields: [primary_pic_id], references: [id])
  secondary_pic Unit?        @relation("SecondaryPic", fields: [secondary_pic_id], references: [id])
  bidang        Bidang?      @relation(fields: [bidangId], references: [id], onDelete: Cascade)

  @@map("indikator_kinerja")
}

model ma {
  id          String    @id @default(cuid())
  maCode      String    @map("ma_code")
  name        String
  indicatorId String    @map("indicator_id")
  MaOnKpi     MaOnKpi[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  createdById String?   @map("created_by_id")
  created_by  User?     @relation("MataAnggaranCreatedBy", fields: [createdById], references: [id])
  indicator   kpi       @relation(fields: [indicatorId], references: [id])

  @@map("mata_anggaran")
}

model MaOnKpi {
  id          String      @id @default(cuid())
  kpiId       String      @map("kpi_id")
  maId        String      @map("ma_id")
  unitId      String      @map("unit_id")
  uraian      String
  output      String
  startDate   DateTime    @map("start_date")
  endDate     DateTime    @map("end_date")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  createdById String?     @map("created_by_id")
  created_by  User?       @relation("MaOnKpiCreatedBy", fields: [createdById], references: [id])
  Pembelian   Pembelian[]

  KPI           kpi            @relation(fields: [kpiId], references: [id], onDelete: Cascade)
  MA            ma             @relation(fields: [maId], references: [id], onDelete: Cascade)
  Unit          Unit           @relation(fields: [unitId], references: [id], onDelete: Cascade)
  ReviewProgram ReviewProgram?

  @@map("_maonkpi")
}

model Rekening {
  id        String      @id @default(cuid())
  noRek     String      @map("no_rek")
  name      String
  jenisId   String      @map("jenis_id")
  units     Unit[]
  Pembelian Pembelian[]
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  jenisRekening JenisRekening @relation(fields: [jenisId], references: [id])

  @@map("rekening")
}

model JenisRekening {
  id        String     @id @default(cuid())
  code      String     @unique
  name      String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  Rekening  Rekening[]

  @@map("jenis_rekening")
}

model Pembelian {
  id          String   @id @default(cuid())
  rekeningId  String   @map("rekening_id")
  prokerId    String   @map("proker_id")
  paguId      String   @map("pagu_id")
  uraian      String
  satuan      String
  nilaiSatuan Int      @map("nilai_satuan")
  kuantitas   String
  jumlah      Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  rekening        Rekening     @relation(fields: [rekeningId], references: [id])
  ma_to_indicator MaOnKpi      @relation(fields: [prokerId], references: [id])
  pagu            PaguAnggaran @relation(fields: [paguId], references: [id])

  @@map("pembelian")
}

model Jadwal {
  id        String    @id @default(cuid())
  unitId    String    @unique @map("unit_id")
  name      String?
  startDate DateTime?
  endDate   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit Unit @relation(fields: [unitId], references: [id])

  @@map("jadwal")
}

model PaguAnggaran {
  id       String @id @default(cuid())
  pagu     Int
  terpakai Int?   @default(0)
  tahun    String
  unitId   String @map("unit_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit      Unit        @relation(fields: [unitId], references: [id])
  Pembelian Pembelian[]

  @@unique([tahun, unitId])
  @@map("pagu_anggaran")
}

model Review {
  id             String   @id @default(cuid())
  tahun          String   @unique
  unitId         String   @map("unit_id")
  reviewUmum     String?  @map("review_umum")
  tanggapanAkhir String?  @map("tanggapan_akhir")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  unit Unit @relation(fields: [unitId], references: [id])

  @@map("review")
}

model ReviewProgram {
  id          String   @id @default(cuid())
  prokerId    String   @unique @map("proker_id")
  temuan      String?
  saran       String?
  tanggapan   String?
  reviewAkhir String?  @map("review_akhir")
  rekomendasi String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  proker MaOnKpi @relation(fields: [prokerId], references: [id])

  @@map("review_program")
}

model Laporan {
  id          String  @id @default(cuid())
  indikatorId String  @map("indikator_id")
  capaian     String? @db.Text
  kendala     String? @db.Text
  perbaikan   String? @db.Text
  rtl         String? @db.Text
  pic         String? @db.Text
  indicator   kpi     @relation(fields: [indikatorId], references: [id])

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  FileLaporan FileLaporan[]

  @@map("laporan")
}

model FileLaporan {
  id           String   @id @default(cuid())
  laporanId    String   @map("laporan_id")
  filename     String
  originalName String
  path         String
  mimetype     String
  size         Int
  extension    String
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  laporan      Laporan  @relation(fields: [laporanId], references: [id])

  @@index([filename])
  @@index([createdAt])
  @@map("file_laporan")
}
